// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as timestamppb$0 from "../../../../../../google.golang.org/protobuf/types/known/timestamppb/models.js";

export class CancelSubscriptionResponse {
    "success"?: boolean;
    "message"?: string;
    "effective_date"?: timestamppb$0.Timestamp | null;

    /** Creates a new CancelSubscriptionResponse instance. */
    constructor($$source: Partial<CancelSubscriptionResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new CancelSubscriptionResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): CancelSubscriptionResponse {
        const $$createField2_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("effective_date" in $$parsedSource) {
            $$parsedSource["effective_date"] = $$createField2_0($$parsedSource["effective_date"]);
        }
        return new CancelSubscriptionResponse($$parsedSource as Partial<CancelSubscriptionResponse>);
    }
}

export class ChangeBillingCycleResponse {
    "success"?: boolean;
    "message"?: string;
    "effective_date"?: timestamppb$0.Timestamp | null;

    /** Creates a new ChangeBillingCycleResponse instance. */
    constructor($$source: Partial<ChangeBillingCycleResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ChangeBillingCycleResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): ChangeBillingCycleResponse {
        const $$createField2_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("effective_date" in $$parsedSource) {
            $$parsedSource["effective_date"] = $$createField2_0($$parsedSource["effective_date"]);
        }
        return new ChangeBillingCycleResponse($$parsedSource as Partial<ChangeBillingCycleResponse>);
    }
}

export class CreateCheckoutSessionResponse {
    "session_id"?: string;
    "checkout_url"?: string;

    /** Creates a new CreateCheckoutSessionResponse instance. */
    constructor($$source: Partial<CreateCheckoutSessionResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new CreateCheckoutSessionResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): CreateCheckoutSessionResponse {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new CreateCheckoutSessionResponse($$parsedSource as Partial<CreateCheckoutSessionResponse>);
    }
}

export enum FeatureSet {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    FeatureSet_FEATURE_SET_UNSPECIFIED = 0,
    FeatureSet_FEATURE_SET_BASIC = 1,
    FeatureSet_FEATURE_SET_PRO = 2,
};

export class GetSubscriptionResponse {
    "subscription"?: Subscription | null;

    /** Creates a new GetSubscriptionResponse instance. */
    constructor($$source: Partial<GetSubscriptionResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GetSubscriptionResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): GetSubscriptionResponse {
        const $$createField0_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("subscription" in $$parsedSource) {
            $$parsedSource["subscription"] = $$createField0_0($$parsedSource["subscription"]);
        }
        return new GetSubscriptionResponse($$parsedSource as Partial<GetSubscriptionResponse>);
    }
}

export class Plan {
    "name"?: string;
    "feature_set"?: FeatureSet;
    "price_monthly_cents"?: number;
    "price_yearly_cents"?: number;
    "currency"?: string;
    "storage_gb"?: number;

    /** Creates a new Plan instance. */
    constructor($$source: Partial<Plan> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Plan instance from a string or object.
     */
    static createFrom($$source: any = {}): Plan {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Plan($$parsedSource as Partial<Plan>);
    }
}

export class ReactivateSubscriptionResponse {
    "success"?: boolean;
    "message"?: string;

    /** Creates a new ReactivateSubscriptionResponse instance. */
    constructor($$source: Partial<ReactivateSubscriptionResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ReactivateSubscriptionResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): ReactivateSubscriptionResponse {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ReactivateSubscriptionResponse($$parsedSource as Partial<ReactivateSubscriptionResponse>);
    }
}

export class Subscription {
    "id"?: string;
    "user_id"?: string;
    "plan_id"?: string;
    "status"?: SubscriptionStatus;
    "current_period_start"?: timestamppb$0.Timestamp | null;
    "current_period_end"?: timestamppb$0.Timestamp | null;
    "cancel_at_period_end"?: boolean;
    "canceled_at"?: timestamppb$0.Timestamp | null;
    "created_at"?: timestamppb$0.Timestamp | null;
    "updated_at"?: timestamppb$0.Timestamp | null;
    "plan"?: Plan | null;
    "storage_used_gb"?: number;
    "is_yearly_billing"?: boolean;

    /** Creates a new Subscription instance. */
    constructor($$source: Partial<Subscription> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Subscription instance from a string or object.
     */
    static createFrom($$source: any = {}): Subscription {
        const $$createField4_0 = $$createType1;
        const $$createField5_0 = $$createType1;
        const $$createField7_0 = $$createType1;
        const $$createField8_0 = $$createType1;
        const $$createField9_0 = $$createType1;
        const $$createField10_0 = $$createType5;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("current_period_start" in $$parsedSource) {
            $$parsedSource["current_period_start"] = $$createField4_0($$parsedSource["current_period_start"]);
        }
        if ("current_period_end" in $$parsedSource) {
            $$parsedSource["current_period_end"] = $$createField5_0($$parsedSource["current_period_end"]);
        }
        if ("canceled_at" in $$parsedSource) {
            $$parsedSource["canceled_at"] = $$createField7_0($$parsedSource["canceled_at"]);
        }
        if ("created_at" in $$parsedSource) {
            $$parsedSource["created_at"] = $$createField8_0($$parsedSource["created_at"]);
        }
        if ("updated_at" in $$parsedSource) {
            $$parsedSource["updated_at"] = $$createField9_0($$parsedSource["updated_at"]);
        }
        if ("plan" in $$parsedSource) {
            $$parsedSource["plan"] = $$createField10_0($$parsedSource["plan"]);
        }
        return new Subscription($$parsedSource as Partial<Subscription>);
    }
}

export enum SubscriptionStatus {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED = 0,
    SubscriptionStatus_SUBSCRIPTION_STATUS_INCOMPLETE = 1,
    SubscriptionStatus_SUBSCRIPTION_STATUS_INCOMPLETE_EXPIRED = 2,
    SubscriptionStatus_SUBSCRIPTION_STATUS_TRIALING = 3,
    SubscriptionStatus_SUBSCRIPTION_STATUS_ACTIVE = 4,
    SubscriptionStatus_SUBSCRIPTION_STATUS_PAST_DUE = 5,
    SubscriptionStatus_SUBSCRIPTION_STATUS_CANCELED = 6,
    SubscriptionStatus_SUBSCRIPTION_STATUS_UNPAID = 7,
};

// Private type creation functions
const $$createType0 = timestamppb$0.Timestamp.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = Subscription.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = Plan.createFrom;
const $$createType5 = $Create.Nullable($$createType4);
