// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as types$0 from "./types/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as ent$0 from "../ent/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../../../time/models.js";

export class AppInfo {
    "version": string;
    "websiteUrl": string;
    "githubUrl": string;
    "description": string;

    /** Creates a new AppInfo instance. */
    constructor($$source: Partial<AppInfo> = {}) {
        if (!("version" in $$source)) {
            this["version"] = "";
        }
        if (!("websiteUrl" in $$source)) {
            this["websiteUrl"] = "";
        }
        if (!("githubUrl" in $$source)) {
            this["githubUrl"] = "";
        }
        if (!("description" in $$source)) {
            this["description"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AppInfo instance from a string or object.
     */
    static createFrom($$source: any = {}): AppInfo {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new AppInfo($$parsedSource as Partial<AppInfo>);
    }
}

export class BackupProfileFilter {
    "id"?: number;
    "name": string;
    "isAllFilter": boolean;
    "isUnknownFilter": boolean;

    /** Creates a new BackupProfileFilter instance. */
    constructor($$source: Partial<BackupProfileFilter> = {}) {
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("isAllFilter" in $$source)) {
            this["isAllFilter"] = false;
        }
        if (!("isUnknownFilter" in $$source)) {
            this["isUnknownFilter"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupProfileFilter instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupProfileFilter {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new BackupProfileFilter($$parsedSource as Partial<BackupProfileFilter>);
    }
}

export class Env {
    "debug": boolean;
    "startPage": string;
    "loginBetaEnabled": boolean;

    /** Creates a new Env instance. */
    constructor($$source: Partial<Env> = {}) {
        if (!("debug" in $$source)) {
            this["debug"] = false;
        }
        if (!("startPage" in $$source)) {
            this["startPage"] = "";
        }
        if (!("loginBetaEnabled" in $$source)) {
            this["loginBetaEnabled"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Env instance from a string or object.
     */
    static createFrom($$source: any = {}): Env {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Env($$parsedSource as Partial<Env>);
    }
}

export class ExaminePruningResult {
    "BackupID": types$0.BackupId;
    "RepositoryName": string;
    "CntArchivesToBeDeleted": number;
    "Error": any;

    /** Creates a new ExaminePruningResult instance. */
    constructor($$source: Partial<ExaminePruningResult> = {}) {
        if (!("BackupID" in $$source)) {
            this["BackupID"] = (new types$0.BackupId());
        }
        if (!("RepositoryName" in $$source)) {
            this["RepositoryName"] = "";
        }
        if (!("CntArchivesToBeDeleted" in $$source)) {
            this["CntArchivesToBeDeleted"] = 0;
        }
        if (!("Error" in $$source)) {
            this["Error"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ExaminePruningResult instance from a string or object.
     */
    static createFrom($$source: any = {}): ExaminePruningResult {
        const $$createField0_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("BackupID" in $$parsedSource) {
            $$parsedSource["BackupID"] = $$createField0_0($$parsedSource["BackupID"]);
        }
        return new ExaminePruningResult($$parsedSource as Partial<ExaminePruningResult>);
    }
}

export class GetPruningOptionsResponse {
    "options": PruningOption[];

    /** Creates a new GetPruningOptionsResponse instance. */
    constructor($$source: Partial<GetPruningOptionsResponse> = {}) {
        if (!("options" in $$source)) {
            this["options"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GetPruningOptionsResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): GetPruningOptionsResponse {
        const $$createField0_0 = $$createType2;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("options" in $$parsedSource) {
            $$parsedSource["options"] = $$createField0_0($$parsedSource["options"]);
        }
        return new GetPruningOptionsResponse($$parsedSource as Partial<GetPruningOptionsResponse>);
    }
}

export class PaginatedArchivesRequest {
    /**
     * Required
     */
    "repositoryId": number;
    "page": number;
    "pageSize": number;

    /**
     * Optional
     */
    "backupProfileFilter"?: BackupProfileFilter | null;
    "search"?: string;
    "startDate"?: time$0.Time;
    "endDate"?: time$0.Time;

    /** Creates a new PaginatedArchivesRequest instance. */
    constructor($$source: Partial<PaginatedArchivesRequest> = {}) {
        if (!("repositoryId" in $$source)) {
            this["repositoryId"] = 0;
        }
        if (!("page" in $$source)) {
            this["page"] = 0;
        }
        if (!("pageSize" in $$source)) {
            this["pageSize"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PaginatedArchivesRequest instance from a string or object.
     */
    static createFrom($$source: any = {}): PaginatedArchivesRequest {
        const $$createField3_0 = $$createType4;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("backupProfileFilter" in $$parsedSource) {
            $$parsedSource["backupProfileFilter"] = $$createField3_0($$parsedSource["backupProfileFilter"]);
        }
        return new PaginatedArchivesRequest($$parsedSource as Partial<PaginatedArchivesRequest>);
    }
}

export class PaginatedArchivesResponse {
    "archives": (ent$0.Archive | null)[];
    "total": number;

    /** Creates a new PaginatedArchivesResponse instance. */
    constructor($$source: Partial<PaginatedArchivesResponse> = {}) {
        if (!("archives" in $$source)) {
            this["archives"] = [];
        }
        if (!("total" in $$source)) {
            this["total"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PaginatedArchivesResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): PaginatedArchivesResponse {
        const $$createField0_0 = $$createType7;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("archives" in $$parsedSource) {
            $$parsedSource["archives"] = $$createField0_0($$parsedSource["archives"]);
        }
        return new PaginatedArchivesResponse($$parsedSource as Partial<PaginatedArchivesResponse>);
    }
}

export class PruningDate {
    "archiveId": number;
    "nextRun": time$0.Time;

    /** Creates a new PruningDate instance. */
    constructor($$source: Partial<PruningDate> = {}) {
        if (!("archiveId" in $$source)) {
            this["archiveId"] = 0;
        }
        if (!("nextRun" in $$source)) {
            this["nextRun"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningDate instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningDate {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new PruningDate($$parsedSource as Partial<PruningDate>);
    }
}

export class PruningDates {
    "dates": PruningDate[];

    /** Creates a new PruningDates instance. */
    constructor($$source: Partial<PruningDates> = {}) {
        if (!("dates" in $$source)) {
            this["dates"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningDates instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningDates {
        const $$createField0_0 = $$createType9;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("dates" in $$parsedSource) {
            $$parsedSource["dates"] = $$createField0_0($$parsedSource["dates"]);
        }
        return new PruningDates($$parsedSource as Partial<PruningDates>);
    }
}

export class PruningOption {
    "name": PruningOptionName;
    "keepHourly": number;
    "keepDaily": number;
    "keepWeekly": number;
    "keepMonthly": number;
    "keepYearly": number;

    /** Creates a new PruningOption instance. */
    constructor($$source: Partial<PruningOption> = {}) {
        if (!("name" in $$source)) {
            this["name"] = ("" as PruningOptionName);
        }
        if (!("keepHourly" in $$source)) {
            this["keepHourly"] = 0;
        }
        if (!("keepDaily" in $$source)) {
            this["keepDaily"] = 0;
        }
        if (!("keepWeekly" in $$source)) {
            this["keepWeekly"] = 0;
        }
        if (!("keepMonthly" in $$source)) {
            this["keepMonthly"] = 0;
        }
        if (!("keepYearly" in $$source)) {
            this["keepYearly"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningOption instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningOption {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new PruningOption($$parsedSource as Partial<PruningOption>);
    }
}

export enum PruningOptionName {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = "",

    PruningOptionNone = "none",
    PruningOptionFew = "few",
    PruningOptionMany = "many",
    PruningOptionCustom = "custom",
};

export class SelectDirectoryData {
    "title": string;
    "message": string;
    "buttonText": string;

    /** Creates a new SelectDirectoryData instance. */
    constructor($$source: Partial<SelectDirectoryData> = {}) {
        if (!("title" in $$source)) {
            this["title"] = "";
        }
        if (!("message" in $$source)) {
            this["message"] = "";
        }
        if (!("buttonText" in $$source)) {
            this["buttonText"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new SelectDirectoryData instance from a string or object.
     */
    static createFrom($$source: any = {}): SelectDirectoryData {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new SelectDirectoryData($$parsedSource as Partial<SelectDirectoryData>);
    }
}

export class TestRepoConnectionResult {
    "success": boolean;
    "needsPassword": boolean;
    "isPasswordValid": boolean;
    "isBorgRepo": boolean;

    /** Creates a new TestRepoConnectionResult instance. */
    constructor($$source: Partial<TestRepoConnectionResult> = {}) {
        if (!("success" in $$source)) {
            this["success"] = false;
        }
        if (!("needsPassword" in $$source)) {
            this["needsPassword"] = false;
        }
        if (!("isPasswordValid" in $$source)) {
            this["isPasswordValid"] = false;
        }
        if (!("isBorgRepo" in $$source)) {
            this["isBorgRepo"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new TestRepoConnectionResult instance from a string or object.
     */
    static createFrom($$source: any = {}): TestRepoConnectionResult {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new TestRepoConnectionResult($$parsedSource as Partial<TestRepoConnectionResult>);
    }
}

// Private type creation functions
const $$createType0 = types$0.BackupId.createFrom;
const $$createType1 = PruningOption.createFrom;
const $$createType2 = $Create.Array($$createType1);
const $$createType3 = BackupProfileFilter.createFrom;
const $$createType4 = $Create.Nullable($$createType3);
const $$createType5 = ent$0.Archive.createFrom;
const $$createType6 = $Create.Nullable($$createType5);
const $$createType7 = $Create.Array($$createType6);
const $$createType8 = PruningDate.createFrom;
const $$createType9 = $Create.Array($$createType8);
