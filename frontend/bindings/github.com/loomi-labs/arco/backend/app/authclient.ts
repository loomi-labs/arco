// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as arcov1$0 from "../api/v1/models.js";

export function CheckAuthStatus(sessionID: string): Promise<arcov1$0.CheckAuthStatusResponse | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2422848893, sessionID) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function CompleteAuthentication(sessionID: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3471874656, sessionID) as any;
    return $resultPromise;
}

export function RefreshToken(refreshToken: string): Promise<arcov1$0.RefreshTokenResponse | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(459351207, refreshToken) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType3($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function StartLogin(email: string): Promise<arcov1$0.LoginResponse | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(668674002, email) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType5($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function StartRegister(email: string): Promise<arcov1$0.RegisterResponse | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1890475488, email) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType7($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = arcov1$0.CheckAuthStatusResponse.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = arcov1$0.RefreshTokenResponse.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = arcov1$0.LoginResponse.createFrom;
const $$createType5 = $Create.Nullable($$createType4);
const $$createType6 = arcov1$0.RegisterResponse.createFrom;
const $$createType7 = $Create.Nullable($$createType6);
