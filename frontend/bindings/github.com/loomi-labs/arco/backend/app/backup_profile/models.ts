// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export class BackupProfileFilter {
    "id"?: number;
    "name": string;
    "isAllFilter": boolean;
    "isUnknownFilter": boolean;

    /** Creates a new BackupProfileFilter instance. */
    constructor($$source: Partial<BackupProfileFilter> = {}) {
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("isAllFilter" in $$source)) {
            this["isAllFilter"] = false;
        }
        if (!("isUnknownFilter" in $$source)) {
            this["isUnknownFilter"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupProfileFilter instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupProfileFilter {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new BackupProfileFilter($$parsedSource as Partial<BackupProfileFilter>);
    }
}

export class GetPruningOptionsResponse {
    "options": PruningOption[];

    /** Creates a new GetPruningOptionsResponse instance. */
    constructor($$source: Partial<GetPruningOptionsResponse> = {}) {
        if (!("options" in $$source)) {
            this["options"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GetPruningOptionsResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): GetPruningOptionsResponse {
        const $$createField0_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("options" in $$parsedSource) {
            $$parsedSource["options"] = $$createField0_0($$parsedSource["options"]);
        }
        return new GetPruningOptionsResponse($$parsedSource as Partial<GetPruningOptionsResponse>);
    }
}

export class PruningOption {
    "name": PruningOptionName;
    "keepHourly": number;
    "keepDaily": number;
    "keepWeekly": number;
    "keepMonthly": number;
    "keepYearly": number;

    /** Creates a new PruningOption instance. */
    constructor($$source: Partial<PruningOption> = {}) {
        if (!("name" in $$source)) {
            this["name"] = PruningOptionName.$zero;
        }
        if (!("keepHourly" in $$source)) {
            this["keepHourly"] = 0;
        }
        if (!("keepDaily" in $$source)) {
            this["keepDaily"] = 0;
        }
        if (!("keepWeekly" in $$source)) {
            this["keepWeekly"] = 0;
        }
        if (!("keepMonthly" in $$source)) {
            this["keepMonthly"] = 0;
        }
        if (!("keepYearly" in $$source)) {
            this["keepYearly"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningOption instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningOption {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new PruningOption($$parsedSource as Partial<PruningOption>);
    }
}

export enum PruningOptionName {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = "",

    PruningOptionNone = "none",
    PruningOptionFew = "few",
    PruningOptionMany = "many",
    PruningOptionCustom = "custom",
};

export class SelectDirectoryData {
    "title": string;
    "message": string;
    "buttonText": string;

    /** Creates a new SelectDirectoryData instance. */
    constructor($$source: Partial<SelectDirectoryData> = {}) {
        if (!("title" in $$source)) {
            this["title"] = "";
        }
        if (!("message" in $$source)) {
            this["message"] = "";
        }
        if (!("buttonText" in $$source)) {
            this["buttonText"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new SelectDirectoryData instance from a string or object.
     */
    static createFrom($$source: any = {}): SelectDirectoryData {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new SelectDirectoryData($$parsedSource as Partial<SelectDirectoryData>);
    }
}

// Private type creation functions
const $$createType0 = PruningOption.createFrom;
const $$createType1 = $Create.Array($$createType0);
