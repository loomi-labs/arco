// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export class AppInfo {
    "version": string;
    "websiteUrl": string;
    "githubUrl": string;
    "description": string;

    /** Creates a new AppInfo instance. */
    constructor($$source: Partial<AppInfo> = {}) {
        if (!("version" in $$source)) {
            this["version"] = "";
        }
        if (!("websiteUrl" in $$source)) {
            this["websiteUrl"] = "";
        }
        if (!("githubUrl" in $$source)) {
            this["githubUrl"] = "";
        }
        if (!("description" in $$source)) {
            this["description"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AppInfo instance from a string or object.
     */
    static createFrom($$source: any = {}): AppInfo {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new AppInfo($$parsedSource as Partial<AppInfo>);
    }
}

export class Env {
    "debug": boolean;
    "startPage": string;
    "loginBetaEnabled": boolean;

    /** Creates a new Env instance. */
    constructor($$source: Partial<Env> = {}) {
        if (!("debug" in $$source)) {
            this["debug"] = false;
        }
        if (!("startPage" in $$source)) {
            this["startPage"] = "";
        }
        if (!("loginBetaEnabled" in $$source)) {
            this["loginBetaEnabled"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Env instance from a string or object.
     */
    static createFrom($$source: any = {}): Env {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Env($$parsedSource as Partial<Env>);
    }
}

export class User {
    "email": string;

    /** Creates a new User instance. */
    constructor($$source: Partial<User> = {}) {
        if (!("email" in $$source)) {
            this["email"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new User instance from a string or object.
     */
    static createFrom($$source: any = {}): User {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new User($$parsedSource as Partial<User>);
    }
}
