// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as backupprofile$0 from "./backupprofile/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as backupschedule$0 from "./backupschedule/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as migrate$0 from "./migrate/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as notification$0 from "./notification/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../../../time/models.js";

/**
 * Archive is the model entity for the Archive schema.
 */
export class Archive {
    /**
     * ID of the ent.
     */
    "id": number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * Name holds the value of the "name" field.
     */
    "name": string;

    /**
     * Duration holds the value of the "duration" field.
     */
    "duration": number;

    /**
     * BorgID holds the value of the "borg_id" field.
     */
    "borgId": string;

    /**
     * WillBePruned holds the value of the "will_be_pruned" field.
     */
    "willBePruned": boolean;

    /**
     * Edges holds the relations/edges for other nodes in the graph.
     * The values are being populated by the ArchiveQuery when eager-loading is set.
     */
    "edges": ArchiveEdges;

    /** Creates a new Archive instance. */
    constructor($$source: Partial<Archive> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("duration" in $$source)) {
            this["duration"] = 0;
        }
        if (!("borgId" in $$source)) {
            this["borgId"] = "";
        }
        if (!("willBePruned" in $$source)) {
            this["willBePruned"] = false;
        }
        if (!("edges" in $$source)) {
            this["edges"] = (new ArchiveEdges());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Archive instance from a string or object.
     */
    static createFrom($$source: any = {}): Archive {
        const $$createField7_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("edges" in $$parsedSource) {
            $$parsedSource["edges"] = $$createField7_0($$parsedSource["edges"]);
        }
        return new Archive($$parsedSource as Partial<Archive>);
    }
}

/**
 * ArchiveClient is a client for the Archive schema.
 */
export class ArchiveClient {

    /** Creates a new ArchiveClient instance. */
    constructor($$source: Partial<ArchiveClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ArchiveClient instance from a string or object.
     */
    static createFrom($$source: any = {}): ArchiveClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ArchiveClient($$parsedSource as Partial<ArchiveClient>);
    }
}

/**
 * ArchiveEdges holds the relations/edges for other nodes in the graph.
 */
export class ArchiveEdges {
    /**
     * Repository holds the value of the repository edge.
     */
    "repository"?: Repository | null;

    /**
     * BackupProfile holds the value of the backup_profile edge.
     */
    "backupProfile"?: BackupProfile | null;

    /** Creates a new ArchiveEdges instance. */
    constructor($$source: Partial<ArchiveEdges> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ArchiveEdges instance from a string or object.
     */
    static createFrom($$source: any = {}): ArchiveEdges {
        const $$createField0_0 = $$createType2;
        const $$createField1_0 = $$createType4;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("repository" in $$parsedSource) {
            $$parsedSource["repository"] = $$createField0_0($$parsedSource["repository"]);
        }
        if ("backupProfile" in $$parsedSource) {
            $$parsedSource["backupProfile"] = $$createField1_0($$parsedSource["backupProfile"]);
        }
        return new ArchiveEdges($$parsedSource as Partial<ArchiveEdges>);
    }
}

/**
 * AuthSessionClient is a client for the AuthSession schema.
 */
export class AuthSessionClient {

    /** Creates a new AuthSessionClient instance. */
    constructor($$source: Partial<AuthSessionClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AuthSessionClient instance from a string or object.
     */
    static createFrom($$source: any = {}): AuthSessionClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new AuthSessionClient($$parsedSource as Partial<AuthSessionClient>);
    }
}

/**
 * BackupProfile is the model entity for the BackupProfile schema.
 */
export class BackupProfile {
    /**
     * ID of the ent.
     */
    "id": number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * Name holds the value of the "name" field.
     */
    "name": string;

    /**
     * Prefix holds the value of the "prefix" field.
     */
    "prefix": string;

    /**
     * BackupPaths holds the value of the "backup_paths" field.
     */
    "backupPaths": string[];

    /**
     * ExcludePaths holds the value of the "exclude_paths" field.
     */
    "excludePaths": string[];

    /**
     * Icon holds the value of the "icon" field.
     */
    "icon": backupprofile$0.Icon;

    /**
     * DataSectionCollapsed holds the value of the "data_section_collapsed" field.
     */
    "dataSectionCollapsed": boolean;

    /**
     * ScheduleSectionCollapsed holds the value of the "schedule_section_collapsed" field.
     */
    "scheduleSectionCollapsed": boolean;

    /**
     * Edges holds the relations/edges for other nodes in the graph.
     * The values are being populated by the BackupProfileQuery when eager-loading is set.
     */
    "edges": BackupProfileEdges;

    /** Creates a new BackupProfile instance. */
    constructor($$source: Partial<BackupProfile> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("prefix" in $$source)) {
            this["prefix"] = "";
        }
        if (!("backupPaths" in $$source)) {
            this["backupPaths"] = [];
        }
        if (!("excludePaths" in $$source)) {
            this["excludePaths"] = [];
        }
        if (!("icon" in $$source)) {
            this["icon"] = ("" as backupprofile$0.Icon);
        }
        if (!("dataSectionCollapsed" in $$source)) {
            this["dataSectionCollapsed"] = false;
        }
        if (!("scheduleSectionCollapsed" in $$source)) {
            this["scheduleSectionCollapsed"] = false;
        }
        if (!("edges" in $$source)) {
            this["edges"] = (new BackupProfileEdges());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupProfile instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupProfile {
        const $$createField5_0 = $$createType5;
        const $$createField6_0 = $$createType5;
        const $$createField10_0 = $$createType6;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("backupPaths" in $$parsedSource) {
            $$parsedSource["backupPaths"] = $$createField5_0($$parsedSource["backupPaths"]);
        }
        if ("excludePaths" in $$parsedSource) {
            $$parsedSource["excludePaths"] = $$createField6_0($$parsedSource["excludePaths"]);
        }
        if ("edges" in $$parsedSource) {
            $$parsedSource["edges"] = $$createField10_0($$parsedSource["edges"]);
        }
        return new BackupProfile($$parsedSource as Partial<BackupProfile>);
    }
}

/**
 * BackupProfileClient is a client for the BackupProfile schema.
 */
export class BackupProfileClient {

    /** Creates a new BackupProfileClient instance. */
    constructor($$source: Partial<BackupProfileClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupProfileClient instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupProfileClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new BackupProfileClient($$parsedSource as Partial<BackupProfileClient>);
    }
}

/**
 * BackupProfileEdges holds the relations/edges for other nodes in the graph.
 */
export class BackupProfileEdges {
    /**
     * Repositories holds the value of the repositories edge.
     */
    "repositories"?: (Repository | null)[];

    /**
     * Archives holds the value of the archives edge.
     */
    "archives"?: (Archive | null)[];

    /**
     * BackupSchedule holds the value of the backup_schedule edge.
     */
    "backupSchedule"?: BackupSchedule | null;

    /**
     * PruningRule holds the value of the pruning_rule edge.
     */
    "pruningRule"?: PruningRule | null;

    /**
     * Notifications holds the value of the notifications edge.
     */
    "notifications"?: (Notification | null)[];

    /** Creates a new BackupProfileEdges instance. */
    constructor($$source: Partial<BackupProfileEdges> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupProfileEdges instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupProfileEdges {
        const $$createField0_0 = $$createType7;
        const $$createField1_0 = $$createType10;
        const $$createField2_0 = $$createType12;
        const $$createField3_0 = $$createType14;
        const $$createField4_0 = $$createType17;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("repositories" in $$parsedSource) {
            $$parsedSource["repositories"] = $$createField0_0($$parsedSource["repositories"]);
        }
        if ("archives" in $$parsedSource) {
            $$parsedSource["archives"] = $$createField1_0($$parsedSource["archives"]);
        }
        if ("backupSchedule" in $$parsedSource) {
            $$parsedSource["backupSchedule"] = $$createField2_0($$parsedSource["backupSchedule"]);
        }
        if ("pruningRule" in $$parsedSource) {
            $$parsedSource["pruningRule"] = $$createField3_0($$parsedSource["pruningRule"]);
        }
        if ("notifications" in $$parsedSource) {
            $$parsedSource["notifications"] = $$createField4_0($$parsedSource["notifications"]);
        }
        return new BackupProfileEdges($$parsedSource as Partial<BackupProfileEdges>);
    }
}

/**
 * BackupSchedule is the model entity for the BackupSchedule schema.
 */
export class BackupSchedule {
    /**
     * ID of the ent.
     */
    "id": number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * Mode holds the value of the "mode" field.
     */
    "mode": backupschedule$0.Mode;

    /**
     * DailyAt holds the value of the "daily_at" field.
     */
    "dailyAt": time$0.Time;

    /**
     * Weekday holds the value of the "weekday" field.
     */
    "weekday": backupschedule$0.Weekday;

    /**
     * WeeklyAt holds the value of the "weekly_at" field.
     */
    "weeklyAt": time$0.Time;

    /**
     * Monthday holds the value of the "monthday" field.
     */
    "monthday": number;

    /**
     * MonthlyAt holds the value of the "monthly_at" field.
     */
    "monthlyAt": time$0.Time;

    /**
     * NextRun holds the value of the "next_run" field.
     */
    "nextRun": time$0.Time;

    /**
     * LastRun holds the value of the "last_run" field.
     */
    "lastRun": time$0.Time | null;

    /**
     * LastRunStatus holds the value of the "last_run_status" field.
     */
    "lastRunStatus": string | null;

    /**
     * Edges holds the relations/edges for other nodes in the graph.
     * The values are being populated by the BackupScheduleQuery when eager-loading is set.
     */
    "edges": BackupScheduleEdges;

    /** Creates a new BackupSchedule instance. */
    constructor($$source: Partial<BackupSchedule> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("mode" in $$source)) {
            this["mode"] = ("" as backupschedule$0.Mode);
        }
        if (!("dailyAt" in $$source)) {
            this["dailyAt"] = null;
        }
        if (!("weekday" in $$source)) {
            this["weekday"] = ("" as backupschedule$0.Weekday);
        }
        if (!("weeklyAt" in $$source)) {
            this["weeklyAt"] = null;
        }
        if (!("monthday" in $$source)) {
            this["monthday"] = 0;
        }
        if (!("monthlyAt" in $$source)) {
            this["monthlyAt"] = null;
        }
        if (!("nextRun" in $$source)) {
            this["nextRun"] = null;
        }
        if (!("lastRun" in $$source)) {
            this["lastRun"] = null;
        }
        if (!("lastRunStatus" in $$source)) {
            this["lastRunStatus"] = null;
        }
        if (!("edges" in $$source)) {
            this["edges"] = (new BackupScheduleEdges());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupSchedule instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupSchedule {
        const $$createField12_0 = $$createType18;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("edges" in $$parsedSource) {
            $$parsedSource["edges"] = $$createField12_0($$parsedSource["edges"]);
        }
        return new BackupSchedule($$parsedSource as Partial<BackupSchedule>);
    }
}

/**
 * BackupScheduleClient is a client for the BackupSchedule schema.
 */
export class BackupScheduleClient {

    /** Creates a new BackupScheduleClient instance. */
    constructor($$source: Partial<BackupScheduleClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupScheduleClient instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupScheduleClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new BackupScheduleClient($$parsedSource as Partial<BackupScheduleClient>);
    }
}

/**
 * BackupScheduleEdges holds the relations/edges for other nodes in the graph.
 */
export class BackupScheduleEdges {
    /**
     * BackupProfile holds the value of the backup_profile edge.
     */
    "backupProfile"?: BackupProfile | null;

    /** Creates a new BackupScheduleEdges instance. */
    constructor($$source: Partial<BackupScheduleEdges> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BackupScheduleEdges instance from a string or object.
     */
    static createFrom($$source: any = {}): BackupScheduleEdges {
        const $$createField0_0 = $$createType4;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("backupProfile" in $$parsedSource) {
            $$parsedSource["backupProfile"] = $$createField0_0($$parsedSource["backupProfile"]);
        }
        return new BackupScheduleEdges($$parsedSource as Partial<BackupScheduleEdges>);
    }
}

/**
 * Client is the client that holds all ent builders.
 */
export class Client {
    /**
     * Schema is the client for creating, migrating and dropping schema.
     */
    "Schema": migrate$0.Schema | null;

    /**
     * Archive is the client for interacting with the Archive builders.
     */
    "Archive": ArchiveClient | null;

    /**
     * AuthSession is the client for interacting with the AuthSession builders.
     */
    "AuthSession": AuthSessionClient | null;

    /**
     * BackupProfile is the client for interacting with the BackupProfile builders.
     */
    "BackupProfile": BackupProfileClient | null;

    /**
     * BackupSchedule is the client for interacting with the BackupSchedule builders.
     */
    "BackupSchedule": BackupScheduleClient | null;

    /**
     * Notification is the client for interacting with the Notification builders.
     */
    "Notification": NotificationClient | null;

    /**
     * PruningRule is the client for interacting with the PruningRule builders.
     */
    "PruningRule": PruningRuleClient | null;

    /**
     * Repository is the client for interacting with the Repository builders.
     */
    "Repository": RepositoryClient | null;

    /**
     * Settings is the client for interacting with the Settings builders.
     */
    "Settings": SettingsClient | null;

    /**
     * User is the client for interacting with the User builders.
     */
    "User": UserClient | null;

    /** Creates a new Client instance. */
    constructor($$source: Partial<Client> = {}) {
        if (!("Schema" in $$source)) {
            this["Schema"] = null;
        }
        if (!("Archive" in $$source)) {
            this["Archive"] = null;
        }
        if (!("AuthSession" in $$source)) {
            this["AuthSession"] = null;
        }
        if (!("BackupProfile" in $$source)) {
            this["BackupProfile"] = null;
        }
        if (!("BackupSchedule" in $$source)) {
            this["BackupSchedule"] = null;
        }
        if (!("Notification" in $$source)) {
            this["Notification"] = null;
        }
        if (!("PruningRule" in $$source)) {
            this["PruningRule"] = null;
        }
        if (!("Repository" in $$source)) {
            this["Repository"] = null;
        }
        if (!("Settings" in $$source)) {
            this["Settings"] = null;
        }
        if (!("User" in $$source)) {
            this["User"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Client instance from a string or object.
     */
    static createFrom($$source: any = {}): Client {
        const $$createField0_0 = $$createType20;
        const $$createField1_0 = $$createType22;
        const $$createField2_0 = $$createType24;
        const $$createField3_0 = $$createType26;
        const $$createField4_0 = $$createType28;
        const $$createField5_0 = $$createType30;
        const $$createField6_0 = $$createType32;
        const $$createField7_0 = $$createType34;
        const $$createField8_0 = $$createType36;
        const $$createField9_0 = $$createType38;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Schema" in $$parsedSource) {
            $$parsedSource["Schema"] = $$createField0_0($$parsedSource["Schema"]);
        }
        if ("Archive" in $$parsedSource) {
            $$parsedSource["Archive"] = $$createField1_0($$parsedSource["Archive"]);
        }
        if ("AuthSession" in $$parsedSource) {
            $$parsedSource["AuthSession"] = $$createField2_0($$parsedSource["AuthSession"]);
        }
        if ("BackupProfile" in $$parsedSource) {
            $$parsedSource["BackupProfile"] = $$createField3_0($$parsedSource["BackupProfile"]);
        }
        if ("BackupSchedule" in $$parsedSource) {
            $$parsedSource["BackupSchedule"] = $$createField4_0($$parsedSource["BackupSchedule"]);
        }
        if ("Notification" in $$parsedSource) {
            $$parsedSource["Notification"] = $$createField5_0($$parsedSource["Notification"]);
        }
        if ("PruningRule" in $$parsedSource) {
            $$parsedSource["PruningRule"] = $$createField6_0($$parsedSource["PruningRule"]);
        }
        if ("Repository" in $$parsedSource) {
            $$parsedSource["Repository"] = $$createField7_0($$parsedSource["Repository"]);
        }
        if ("Settings" in $$parsedSource) {
            $$parsedSource["Settings"] = $$createField8_0($$parsedSource["Settings"]);
        }
        if ("User" in $$parsedSource) {
            $$parsedSource["User"] = $$createField9_0($$parsedSource["User"]);
        }
        return new Client($$parsedSource as Partial<Client>);
    }
}

/**
 * Notification is the model entity for the Notification schema.
 */
export class Notification {
    /**
     * ID of the ent.
     */
    "id": number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * Message holds the value of the "message" field.
     */
    "message": string;

    /**
     * Type holds the value of the "type" field.
     */
    "type": notification$0.Type;

    /**
     * Seen holds the value of the "seen" field.
     */
    "seen": boolean;

    /**
     * Action holds the value of the "action" field.
     */
    "action": notification$0.Action;

    /**
     * Edges holds the relations/edges for other nodes in the graph.
     * The values are being populated by the NotificationQuery when eager-loading is set.
     */
    "edges": NotificationEdges;

    /** Creates a new Notification instance. */
    constructor($$source: Partial<Notification> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("message" in $$source)) {
            this["message"] = "";
        }
        if (!("type" in $$source)) {
            this["type"] = ("" as notification$0.Type);
        }
        if (!("seen" in $$source)) {
            this["seen"] = false;
        }
        if (!("action" in $$source)) {
            this["action"] = ("" as notification$0.Action);
        }
        if (!("edges" in $$source)) {
            this["edges"] = (new NotificationEdges());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Notification instance from a string or object.
     */
    static createFrom($$source: any = {}): Notification {
        const $$createField7_0 = $$createType39;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("edges" in $$parsedSource) {
            $$parsedSource["edges"] = $$createField7_0($$parsedSource["edges"]);
        }
        return new Notification($$parsedSource as Partial<Notification>);
    }
}

/**
 * NotificationClient is a client for the Notification schema.
 */
export class NotificationClient {

    /** Creates a new NotificationClient instance. */
    constructor($$source: Partial<NotificationClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new NotificationClient instance from a string or object.
     */
    static createFrom($$source: any = {}): NotificationClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new NotificationClient($$parsedSource as Partial<NotificationClient>);
    }
}

/**
 * NotificationEdges holds the relations/edges for other nodes in the graph.
 */
export class NotificationEdges {
    /**
     * BackupProfile holds the value of the backup_profile edge.
     */
    "backupProfile"?: BackupProfile | null;

    /**
     * Repository holds the value of the repository edge.
     */
    "repository"?: Repository | null;

    /** Creates a new NotificationEdges instance. */
    constructor($$source: Partial<NotificationEdges> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new NotificationEdges instance from a string or object.
     */
    static createFrom($$source: any = {}): NotificationEdges {
        const $$createField0_0 = $$createType4;
        const $$createField1_0 = $$createType2;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("backupProfile" in $$parsedSource) {
            $$parsedSource["backupProfile"] = $$createField0_0($$parsedSource["backupProfile"]);
        }
        if ("repository" in $$parsedSource) {
            $$parsedSource["repository"] = $$createField1_0($$parsedSource["repository"]);
        }
        return new NotificationEdges($$parsedSource as Partial<NotificationEdges>);
    }
}

/**
 * PruningRule is the model entity for the PruningRule schema.
 */
export class PruningRule {
    /**
     * ID of the ent.
     */
    "id": number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * IsEnabled holds the value of the "is_enabled" field.
     */
    "isEnabled": boolean;

    /**
     * KeepHourly holds the value of the "keep_hourly" field.
     */
    "keepHourly": number;

    /**
     * KeepDaily holds the value of the "keep_daily" field.
     */
    "keepDaily": number;

    /**
     * KeepWeekly holds the value of the "keep_weekly" field.
     */
    "keepWeekly": number;

    /**
     * KeepMonthly holds the value of the "keep_monthly" field.
     */
    "keepMonthly": number;

    /**
     * KeepYearly holds the value of the "keep_yearly" field.
     */
    "keepYearly": number;

    /**
     * KeepWithinDays holds the value of the "keep_within_days" field.
     */
    "keepWithinDays": number;

    /**
     * NextRun holds the value of the "next_run" field.
     */
    "nextRun": time$0.Time;

    /**
     * LastRun holds the value of the "last_run" field.
     */
    "lastRun": time$0.Time | null;

    /**
     * LastRunStatus holds the value of the "last_run_status" field.
     */
    "lastRunStatus": string | null;

    /**
     * Edges holds the relations/edges for other nodes in the graph.
     * The values are being populated by the PruningRuleQuery when eager-loading is set.
     */
    "edges": PruningRuleEdges;

    /** Creates a new PruningRule instance. */
    constructor($$source: Partial<PruningRule> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("isEnabled" in $$source)) {
            this["isEnabled"] = false;
        }
        if (!("keepHourly" in $$source)) {
            this["keepHourly"] = 0;
        }
        if (!("keepDaily" in $$source)) {
            this["keepDaily"] = 0;
        }
        if (!("keepWeekly" in $$source)) {
            this["keepWeekly"] = 0;
        }
        if (!("keepMonthly" in $$source)) {
            this["keepMonthly"] = 0;
        }
        if (!("keepYearly" in $$source)) {
            this["keepYearly"] = 0;
        }
        if (!("keepWithinDays" in $$source)) {
            this["keepWithinDays"] = 0;
        }
        if (!("nextRun" in $$source)) {
            this["nextRun"] = null;
        }
        if (!("lastRun" in $$source)) {
            this["lastRun"] = null;
        }
        if (!("lastRunStatus" in $$source)) {
            this["lastRunStatus"] = null;
        }
        if (!("edges" in $$source)) {
            this["edges"] = (new PruningRuleEdges());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningRule instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningRule {
        const $$createField13_0 = $$createType40;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("edges" in $$parsedSource) {
            $$parsedSource["edges"] = $$createField13_0($$parsedSource["edges"]);
        }
        return new PruningRule($$parsedSource as Partial<PruningRule>);
    }
}

/**
 * PruningRuleClient is a client for the PruningRule schema.
 */
export class PruningRuleClient {

    /** Creates a new PruningRuleClient instance. */
    constructor($$source: Partial<PruningRuleClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningRuleClient instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningRuleClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new PruningRuleClient($$parsedSource as Partial<PruningRuleClient>);
    }
}

/**
 * PruningRuleEdges holds the relations/edges for other nodes in the graph.
 */
export class PruningRuleEdges {
    /**
     * BackupProfile holds the value of the backup_profile edge.
     */
    "backupProfile"?: BackupProfile | null;

    /** Creates a new PruningRuleEdges instance. */
    constructor($$source: Partial<PruningRuleEdges> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PruningRuleEdges instance from a string or object.
     */
    static createFrom($$source: any = {}): PruningRuleEdges {
        const $$createField0_0 = $$createType4;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("backupProfile" in $$parsedSource) {
            $$parsedSource["backupProfile"] = $$createField0_0($$parsedSource["backupProfile"]);
        }
        return new PruningRuleEdges($$parsedSource as Partial<PruningRuleEdges>);
    }
}

/**
 * Repository is the model entity for the Repository schema.
 */
export class Repository {
    /**
     * ID of the ent.
     */
    "id": number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * Name holds the value of the "name" field.
     */
    "name": string;

    /**
     * Location holds the value of the "location" field.
     */
    "location": string;

    /**
     * Password holds the value of the "password" field.
     */
    "password": string;

    /**
     * NextIntegrityCheck holds the value of the "next_integrity_check" field.
     */
    "nextIntegrityCheck": time$0.Time | null;

    /**
     * StatsTotalChunks holds the value of the "stats_total_chunks" field.
     */
    "statsTotalChunks": number;

    /**
     * StatsTotalSize holds the value of the "stats_total_size" field.
     */
    "statsTotalSize": number;

    /**
     * StatsTotalCsize holds the value of the "stats_total_csize" field.
     */
    "statsTotalCsize": number;

    /**
     * StatsTotalUniqueChunks holds the value of the "stats_total_unique_chunks" field.
     */
    "statsTotalUniqueChunks": number;

    /**
     * StatsUniqueSize holds the value of the "stats_unique_size" field.
     */
    "statsUniqueSize": number;

    /**
     * StatsUniqueCsize holds the value of the "stats_unique_csize" field.
     */
    "statsUniqueCsize": number;

    /**
     * Edges holds the relations/edges for other nodes in the graph.
     * The values are being populated by the RepositoryQuery when eager-loading is set.
     */
    "edges": RepositoryEdges;

    /** Creates a new Repository instance. */
    constructor($$source: Partial<Repository> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("location" in $$source)) {
            this["location"] = "";
        }
        if (!("password" in $$source)) {
            this["password"] = "";
        }
        if (!("nextIntegrityCheck" in $$source)) {
            this["nextIntegrityCheck"] = null;
        }
        if (!("statsTotalChunks" in $$source)) {
            this["statsTotalChunks"] = 0;
        }
        if (!("statsTotalSize" in $$source)) {
            this["statsTotalSize"] = 0;
        }
        if (!("statsTotalCsize" in $$source)) {
            this["statsTotalCsize"] = 0;
        }
        if (!("statsTotalUniqueChunks" in $$source)) {
            this["statsTotalUniqueChunks"] = 0;
        }
        if (!("statsUniqueSize" in $$source)) {
            this["statsUniqueSize"] = 0;
        }
        if (!("statsUniqueCsize" in $$source)) {
            this["statsUniqueCsize"] = 0;
        }
        if (!("edges" in $$source)) {
            this["edges"] = (new RepositoryEdges());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Repository instance from a string or object.
     */
    static createFrom($$source: any = {}): Repository {
        const $$createField13_0 = $$createType41;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("edges" in $$parsedSource) {
            $$parsedSource["edges"] = $$createField13_0($$parsedSource["edges"]);
        }
        return new Repository($$parsedSource as Partial<Repository>);
    }
}

/**
 * RepositoryClient is a client for the Repository schema.
 */
export class RepositoryClient {

    /** Creates a new RepositoryClient instance. */
    constructor($$source: Partial<RepositoryClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new RepositoryClient instance from a string or object.
     */
    static createFrom($$source: any = {}): RepositoryClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new RepositoryClient($$parsedSource as Partial<RepositoryClient>);
    }
}

/**
 * RepositoryEdges holds the relations/edges for other nodes in the graph.
 */
export class RepositoryEdges {
    /**
     * BackupProfiles holds the value of the backup_profiles edge.
     */
    "backupProfiles"?: (BackupProfile | null)[];

    /**
     * Archives holds the value of the archives edge.
     */
    "archives"?: (Archive | null)[];

    /**
     * Notifications holds the value of the notifications edge.
     */
    "notifications"?: (Notification | null)[];

    /** Creates a new RepositoryEdges instance. */
    constructor($$source: Partial<RepositoryEdges> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new RepositoryEdges instance from a string or object.
     */
    static createFrom($$source: any = {}): RepositoryEdges {
        const $$createField0_0 = $$createType42;
        const $$createField1_0 = $$createType10;
        const $$createField2_0 = $$createType17;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("backupProfiles" in $$parsedSource) {
            $$parsedSource["backupProfiles"] = $$createField0_0($$parsedSource["backupProfiles"]);
        }
        if ("archives" in $$parsedSource) {
            $$parsedSource["archives"] = $$createField1_0($$parsedSource["archives"]);
        }
        if ("notifications" in $$parsedSource) {
            $$parsedSource["notifications"] = $$createField2_0($$parsedSource["notifications"]);
        }
        return new RepositoryEdges($$parsedSource as Partial<RepositoryEdges>);
    }
}

/**
 * Settings is the model entity for the Settings schema.
 */
export class Settings {
    /**
     * ID of the ent.
     */
    "id"?: number;

    /**
     * CreatedAt holds the value of the "created_at" field.
     */
    "createdAt": time$0.Time;

    /**
     * UpdatedAt holds the value of the "updated_at" field.
     */
    "updatedAt": time$0.Time;

    /**
     * ShowWelcome holds the value of the "show_welcome" field.
     */
    "showWelcome": boolean;

    /** Creates a new Settings instance. */
    constructor($$source: Partial<Settings> = {}) {
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }
        if (!("showWelcome" in $$source)) {
            this["showWelcome"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Settings instance from a string or object.
     */
    static createFrom($$source: any = {}): Settings {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Settings($$parsedSource as Partial<Settings>);
    }
}

/**
 * SettingsClient is a client for the Settings schema.
 */
export class SettingsClient {

    /** Creates a new SettingsClient instance. */
    constructor($$source: Partial<SettingsClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new SettingsClient instance from a string or object.
     */
    static createFrom($$source: any = {}): SettingsClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new SettingsClient($$parsedSource as Partial<SettingsClient>);
    }
}

/**
 * UserClient is a client for the User schema.
 */
export class UserClient {

    /** Creates a new UserClient instance. */
    constructor($$source: Partial<UserClient> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new UserClient instance from a string or object.
     */
    static createFrom($$source: any = {}): UserClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new UserClient($$parsedSource as Partial<UserClient>);
    }
}

// Private type creation functions
const $$createType0 = ArchiveEdges.createFrom;
const $$createType1 = Repository.createFrom;
const $$createType2 = $Create.Nullable($$createType1);
const $$createType3 = BackupProfile.createFrom;
const $$createType4 = $Create.Nullable($$createType3);
const $$createType5 = $Create.Array($Create.Any);
const $$createType6 = BackupProfileEdges.createFrom;
const $$createType7 = $Create.Array($$createType2);
const $$createType8 = Archive.createFrom;
const $$createType9 = $Create.Nullable($$createType8);
const $$createType10 = $Create.Array($$createType9);
const $$createType11 = BackupSchedule.createFrom;
const $$createType12 = $Create.Nullable($$createType11);
const $$createType13 = PruningRule.createFrom;
const $$createType14 = $Create.Nullable($$createType13);
const $$createType15 = Notification.createFrom;
const $$createType16 = $Create.Nullable($$createType15);
const $$createType17 = $Create.Array($$createType16);
const $$createType18 = BackupScheduleEdges.createFrom;
const $$createType19 = migrate$0.Schema.createFrom;
const $$createType20 = $Create.Nullable($$createType19);
const $$createType21 = ArchiveClient.createFrom;
const $$createType22 = $Create.Nullable($$createType21);
const $$createType23 = AuthSessionClient.createFrom;
const $$createType24 = $Create.Nullable($$createType23);
const $$createType25 = BackupProfileClient.createFrom;
const $$createType26 = $Create.Nullable($$createType25);
const $$createType27 = BackupScheduleClient.createFrom;
const $$createType28 = $Create.Nullable($$createType27);
const $$createType29 = NotificationClient.createFrom;
const $$createType30 = $Create.Nullable($$createType29);
const $$createType31 = PruningRuleClient.createFrom;
const $$createType32 = $Create.Nullable($$createType31);
const $$createType33 = RepositoryClient.createFrom;
const $$createType34 = $Create.Nullable($$createType33);
const $$createType35 = SettingsClient.createFrom;
const $$createType36 = $Create.Nullable($$createType35);
const $$createType37 = UserClient.createFrom;
const $$createType38 = $Create.Nullable($$createType37);
const $$createType39 = NotificationEdges.createFrom;
const $$createType40 = PruningRuleEdges.createFrom;
const $$createType41 = RepositoryEdges.createFrom;
const $$createType42 = $Create.Array($$createType4);
