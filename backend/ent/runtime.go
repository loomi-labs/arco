// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/loomi-labs/arco/backend/ent/archive"
	"github.com/loomi-labs/arco/backend/ent/backupprofile"
	"github.com/loomi-labs/arco/backend/ent/backupschedule"
	"github.com/loomi-labs/arco/backend/ent/notification"
	"github.com/loomi-labs/arco/backend/ent/pruningrule"
	"github.com/loomi-labs/arco/backend/ent/repository"
	"github.com/loomi-labs/arco/backend/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	archiveFields := schema.Archive{}.Fields()
	_ = archiveFields
	// archiveDescWillBePruned is the schema descriptor for will_be_pruned field.
	archiveDescWillBePruned := archiveFields[5].Descriptor()
	// archive.DefaultWillBePruned holds the default value on creation for the will_be_pruned field.
	archive.DefaultWillBePruned = archiveDescWillBePruned.Default.(bool)
	backupprofileFields := schema.BackupProfile{}.Fields()
	_ = backupprofileFields
	// backupprofileDescName is the schema descriptor for name field.
	backupprofileDescName := backupprofileFields[1].Descriptor()
	// backupprofile.NameValidator is a validator for the "name" field. It is called by the builders before save.
	backupprofile.NameValidator = func() func(string) error {
		validators := backupprofileDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// backupprofileDescPrefix is the schema descriptor for prefix field.
	backupprofileDescPrefix := backupprofileFields[2].Descriptor()
	// backupprofile.PrefixValidator is a validator for the "prefix" field. It is called by the builders before save.
	backupprofile.PrefixValidator = backupprofileDescPrefix.Validators[0].(func(string) error)
	// backupprofileDescBackupPaths is the schema descriptor for backup_paths field.
	backupprofileDescBackupPaths := backupprofileFields[3].Descriptor()
	// backupprofile.DefaultBackupPaths holds the default value on creation for the backup_paths field.
	backupprofile.DefaultBackupPaths = backupprofileDescBackupPaths.Default.([]string)
	// backupprofileDescExcludePaths is the schema descriptor for exclude_paths field.
	backupprofileDescExcludePaths := backupprofileFields[4].Descriptor()
	// backupprofile.DefaultExcludePaths holds the default value on creation for the exclude_paths field.
	backupprofile.DefaultExcludePaths = backupprofileDescExcludePaths.Default.([]string)
	backupscheduleFields := schema.BackupSchedule{}.Fields()
	_ = backupscheduleFields
	// backupscheduleDescUpdatedAt is the schema descriptor for updated_at field.
	backupscheduleDescUpdatedAt := backupscheduleFields[1].Descriptor()
	// backupschedule.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	backupschedule.DefaultUpdatedAt = backupscheduleDescUpdatedAt.Default.(func() time.Time)
	// backupschedule.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	backupschedule.UpdateDefaultUpdatedAt = backupscheduleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// backupscheduleDescMonthday is the schema descriptor for monthday field.
	backupscheduleDescMonthday := backupscheduleFields[6].Descriptor()
	// backupschedule.MonthdayValidator is a validator for the "monthday" field. It is called by the builders before save.
	backupschedule.MonthdayValidator = backupscheduleDescMonthday.Validators[0].(func(uint8) error)
	notificationFields := schema.Notification{}.Fields()
	_ = notificationFields
	// notificationDescCreatedAt is the schema descriptor for created_at field.
	notificationDescCreatedAt := notificationFields[1].Descriptor()
	// notification.DefaultCreatedAt holds the default value on creation for the created_at field.
	notification.DefaultCreatedAt = notificationDescCreatedAt.Default.(time.Time)
	// notificationDescSeen is the schema descriptor for seen field.
	notificationDescSeen := notificationFields[4].Descriptor()
	// notification.DefaultSeen holds the default value on creation for the seen field.
	notification.DefaultSeen = notificationDescSeen.Default.(bool)
	pruningruleFields := schema.PruningRule{}.Fields()
	_ = pruningruleFields
	// pruningruleDescUpdatedAt is the schema descriptor for updated_at field.
	pruningruleDescUpdatedAt := pruningruleFields[1].Descriptor()
	// pruningrule.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	pruningrule.DefaultUpdatedAt = pruningruleDescUpdatedAt.Default.(func() time.Time)
	// pruningrule.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	pruningrule.UpdateDefaultUpdatedAt = pruningruleDescUpdatedAt.UpdateDefault.(func() time.Time)
	repositoryFields := schema.Repository{}.Fields()
	_ = repositoryFields
	// repositoryDescStatsTotalChunks is the schema descriptor for stats_total_chunks field.
	repositoryDescStatsTotalChunks := repositoryFields[5].Descriptor()
	// repository.DefaultStatsTotalChunks holds the default value on creation for the stats_total_chunks field.
	repository.DefaultStatsTotalChunks = repositoryDescStatsTotalChunks.Default.(int)
	// repositoryDescStatsTotalSize is the schema descriptor for stats_total_size field.
	repositoryDescStatsTotalSize := repositoryFields[6].Descriptor()
	// repository.DefaultStatsTotalSize holds the default value on creation for the stats_total_size field.
	repository.DefaultStatsTotalSize = repositoryDescStatsTotalSize.Default.(int)
	// repositoryDescStatsTotalCsize is the schema descriptor for stats_total_csize field.
	repositoryDescStatsTotalCsize := repositoryFields[7].Descriptor()
	// repository.DefaultStatsTotalCsize holds the default value on creation for the stats_total_csize field.
	repository.DefaultStatsTotalCsize = repositoryDescStatsTotalCsize.Default.(int)
	// repositoryDescStatsTotalUniqueChunks is the schema descriptor for stats_total_unique_chunks field.
	repositoryDescStatsTotalUniqueChunks := repositoryFields[8].Descriptor()
	// repository.DefaultStatsTotalUniqueChunks holds the default value on creation for the stats_total_unique_chunks field.
	repository.DefaultStatsTotalUniqueChunks = repositoryDescStatsTotalUniqueChunks.Default.(int)
	// repositoryDescStatsUniqueSize is the schema descriptor for stats_unique_size field.
	repositoryDescStatsUniqueSize := repositoryFields[9].Descriptor()
	// repository.DefaultStatsUniqueSize holds the default value on creation for the stats_unique_size field.
	repository.DefaultStatsUniqueSize = repositoryDescStatsUniqueSize.Default.(int)
	// repositoryDescStatsUniqueCsize is the schema descriptor for stats_unique_csize field.
	repositoryDescStatsUniqueCsize := repositoryFields[10].Descriptor()
	// repository.DefaultStatsUniqueCsize holds the default value on creation for the stats_unique_csize field.
	repository.DefaultStatsUniqueCsize = repositoryDescStatsUniqueCsize.Default.(int)
	settingsFields := schema.Settings{}.Fields()
	_ = settingsFields
}
