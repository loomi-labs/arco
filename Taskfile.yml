version: '3'

includes:
  common: ./build/Taskfile.yml
  windows: ./build/windows/Taskfile.yml
  darwin: ./build/darwin/Taskfile.yml
  linux: ./build/linux/Taskfile.yml
  db: ./Taskfile.db.yml
  dev: ./Taskfile.dev.yml
  proto: ./proto/Taskfile.proto.yml

vars:
  APP_NAME: "arco"
  BIN_DIR: "bin"
  VITE_PORT: '{{.WAILS_VITE_PORT | default 9245}}'
  VERSION:
    sh: sed -n 's/.*"\."\s*:\s*"\([0-9.]*\)".*/\1/p' .release-please-manifest.json

tasks:
  build:
    desc: Builds the application
    cmds:
      - task: '{{if eq .PLATFORM "darwin/universal"}}darwin:build:universal{{else}}{{OS}}:build{{end}}'

  package:
    desc: Packages a production build of the application
    cmds:
      - task: '{{if eq .PLATFORM "darwin/universal"}}darwin:package:universal{{else}}{{OS}}:package{{end}}'

  run:
    desc: Runs the application
    cmds:
      - task: "{{OS}}:run"

  test:
    desc: Runs tests
    deps:
      - task: dev:gen:mocks
    preconditions:
      - mkdir -p frontend/dist
      - touch frontend/dist/index.html
    cmds:
      - go test -cover -mod=readonly --timeout 1m $(go list ./... | grep -v ent)

  test:integration:
    desc: Runs integration tests against real borg instances
    deps:
      - task: dev:gen:mocks
    preconditions:
      - sh: command -v docker
        msg: "Docker is required for integration tests"
    cmds:
      - go test -tags=integration -cover -mod=readonly --timeout 10m ./backend/borg/...

  test:integration:docker:
    desc: Runs integration tests in containerized environment (optional with custom client/server/image version)
    preconditions:
      - sh: command -v docker
        msg: "Docker is required for integration tests"
    cmds:
      - ./scripts/run-matrix-integration-tests.sh --client-version {{.CLIENT_VERSION | default "1.4.1"}} --server-version {{.SERVER_VERSION | default "1.4.1"}} --os ubuntu --base-image {{.BASE_IMAGE | default "ubuntu:24.04"}}

  test:integration:matrix:
    desc: Runs integration tests with multiple borg version combinations
    preconditions:
      - sh: command -v docker
        msg: "Docker is required for integration tests"
    cmds:
      - echo "Testing borg version matrix..."
      - ./scripts/run-matrix-integration-tests.sh --client-version 1.2.8 --server-version 1.2.8 --os ubuntu
      - ./scripts/run-matrix-integration-tests.sh --client-version 1.4.0 --server-version 1.4.0 --os ubuntu
      - ./scripts/run-matrix-integration-tests.sh --client-version 1.4.1 --server-version 1.4.1 --os ubuntu
      - echo "Matrix testing completed successfully!"
