name: Build

on:
  workflow_call:

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.release.outputs.prs_created }}
    steps:
      # Create release PR
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: go
          skip-github-release: true
      - name: Debug release please output
        run: echo "tag_name=${{ steps.release.outputs.prs_created }}"

  build:
    needs: create-release-pr
    if: ${{ needs.create-release-pr.outputs.updated }}
    strategy:
      fail-fast: false
      matrix:
        # Build Arco for Linux and MacOS
        build: [
          { zip-name: arco-linux, platform: linux/amd64, os: ubuntu-latest },
          { zip-name: arco-macos, platform: darwin/universal, os: macos-latest }
        ]
#    outputs:
#      output_ubuntu-latest: ${{ steps.gen_output.outputs.output_ubuntu-latest }}
#      output_macos-latest: ${{ steps.gen_output.outputs.output_macos-latest }}
    runs-on: ${{ matrix.build.os }}
    steps:
      # Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4
      # Setup pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      # Build Arco with Wails
      - name: Build Arco
        uses: dAppServer/wails-build-action@v2.2
        with:
          node-version: 22
          build-name: arco
          build-platform: ${{ matrix.build.platform }}
          package: false
#      # Compress build artifact (only for Linux)
#      - name: Compress build artifact
#        if: ${{ matrix.build.os == 'ubuntu-latest' }}
#        run: zip -r ./build/bin/${{ matrix.build.zip-name }} ./build/bin/arco
#      # Rename build artifact (only for MacOS)
#      - name: Rename build artifact
#        if: ${{ matrix.build.os == 'macos-latest' }}
#        run: mv ./build/bin/arco.app.zip ./build/bin/${{ matrix.build.zip-name }}
      # Upload build assets
      - uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ matrix.build.zip-name }}
          path: |
            */bin/
            *\bin\*

      # Generate upload output
#      - name: Generate upload output
#        id: gen_output
#        run: |
#          os="${{ matrix.build.os }}"
#          upload="${{ steps.upload.outputs.artifact-id }}"
#          echo "output_${os}=${upload}" >> "$GITHUB_OUTPUT"

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - create-release-pr
      - build
#    if: ${{ !needs.create-release-pr.outputs.updated }}
    steps:
      # Create release PR
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: go
          skip-github-pull-request: true
      # Download release artifact
      - uses: actions/download-artifact@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
#          path: build-asset
          pattern: arco-*
#          pattern: Wails Build*
      # Debug show all files
      - name: Debug show all files
        run: ls -la
      # Upload release artifact
      - name: Upload release artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: gh release upload ${{ steps.release.outputs.tag_name }} ./build-asset/arco-linux.zip ./build-asset/arco-macos.zip
        run: gh release upload ${{ steps.release.outputs.tag_name }} arco-linux arco-macos